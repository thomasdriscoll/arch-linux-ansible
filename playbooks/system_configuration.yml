---
- name: Post-install system configuration
  hosts: localhost
  become: true

  collections:
    - kewlfft.aur

  vars_files:
    - aur_packages.yml
    - sys-config-vars.yml
    - users.yml

  tasks:
    - name: Update pacman first
      community.general.pacman:
        update_cache: true
        upgrade: true
      become: true
      become_user: root

    # Create and configure users and permissions
    - name: Configure users
      ansible.builtin.include_role:
        name: configure_user
      vars:
        _user: "{{ item }}"
      loop: "{{ users }}"

    - name: Install essential initial packages
      community.general.pacman:
        name: "{{ item }}"
        state: present
        extra_args: --needed --noconfirm
      loop: "{{ essential_packages }}"

    - name: Install AUR packages
      kewlfft.aur.aur:
        name: "{{ item }}"
        use: makepkg
        state: present
      become: true
      become_user: aurbuilder
      loop: "{{ aur_packages }}"

    - name: Uncomment NOPASSWD for wheel group
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regex: '^%wheel\s+ALL=\(ALL\)\s+NOPASSWD: ALL$'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        backup: true
        state: present
        validate: 'visudo -cf %s'
      become: true
      become_user: root

    # Set firewall rules
    - name: Configure UFW Default Policies
      community.general.ufw:
        policy: '{{ item.policy }}'
        direction: '{{ item.direction }}'
      with_items:
        - {policy: 'deny', direction: 'incoming'}
        - {policy: 'allow', direction: 'outgoing'}

    - name: Limit SSH
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Allow all access from LANs
      community.general.ufw:
        rule: allow
        src: 192.168.0.0/24

    - name: Enable UFW
      community.general.ufw:
        state: enabled

    - name: Start NetworkManager
      ansible.builtin.service:
        name: NetworkManager
        state: started
        enabled: true

    # Additional security
    - name: Start AppArmor service
      ansible.builtin.service:
        name: apparmor
        state: started
        enabled: true
