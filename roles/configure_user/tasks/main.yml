---
- name: Create users
  user:
    name: "{{ _user.username }}"
    password: "{{ _user.password | password_hash('sha512', _user.username) }}"
    groups: "{{ _user.groups }}"
    shell: /bin/zsh
    update_password: always
  become: true
  become_user: root

### Need to add SSH key
- name: Make .ssh folder
  file:
    path: "/home/{{ _user.username }}/.ssh"
    state: directory
  become: true
  become_user: "{{ _user.username }}"

- name: Generate OpenSSH key pair
  openssh_keypair:
    path: "/home/{{ _user.username }}/.ssh/github"
    type: rsa
    size: 2048
    state: present
  register: ssh_keypair


### Being config cloning
- name: Clone dotfiles
  git:
    repo: https://github.com/thomasdriscoll/dotfiles.git
    dest: "/home/{{ _user.username }}/dotfiles"
    separate_git_dir: "~/.cfg"
  become: true
  become_user: "{{ _user.username }}"

- name: Move files one level up
  command: "ls -a /home/{{ _user.username }}/dotfiles"
  register: dotfiles_to_move

- name: Move files to destination
  command: mv "/home/{{ _user.username }}/dotfiles/{{ iterator }}" "/home/{{ _user.username }}/"
  loop: "{{ dotfiles_to_move.stdout_lines[2:] }}"
  loop_control:
    loop_var: iterator

- name: Clone neovim-config
  git:
    repo: https://github.com/thomasdriscoll/neovim-config.git
    dest: "/home/{{ _user.username }}/.config/nvim"
  become: true
  become_user: "{{ _user.username }}"

- name: Update Git working tree
  command: git --git-dir=/home/{{ _user.username }}/.cfg --work-tree=/home/{{ _user.username }} config core.worktree /home/{{ _user.username }}
  become: true
  become_user: "{{ _user.username }}"

- name: Add AUR ansible collection
  command: ansible-galaxy collection install kewlfft.aur
  become: true
  become_user: "{{ _user.username }}"

- name: create Projects directory
  file:
    path: "/home/{{ _user }}/Projects"
    state: directory
  become: true
  become_user: "{{ _user.username }}"

- name: delete dotfiles direcotry
  file:
    path: "/home/{{ _user }}/dotfiles"
    state: absent
  become: true
  become_user: "{{ _user.username }}"


